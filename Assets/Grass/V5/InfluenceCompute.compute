// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

struct sourceVert
{
    float3 position;
    float4x4 rot;
    float2 uv0;
};

StructuredBuffer<sourceVert> _SourceVertices;
RWStructuredBuffer<float3> _VertexInfluences;
float3 _Influences;
float4x4 _ObjectToWarldScale;
float4x4 _ObjectToWarldRotation;
float3 _ObjectPos;



[numthreads(128,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	float InfluenceMagnitude = 6;
	float InfluenceRadius = 1.3;
	uint v = id.x;

	float3 pos = _SourceVertices[v].position.xyz;

	pos = mul(_ObjectToWarldScale, pos);
	pos = mul(_ObjectToWarldRotation, pos);
	pos += _ObjectPos;
	//pos = mul(_ObjectToWarldPosition, pos);
		
	float3 diff = _Influences - pos;
	float3 dis = distance(_Influences-float3(0,1,0), pos);

   _VertexInfluences[v] = -InfluenceMagnitude * saturate(1-dis/InfluenceRadius) * normalize(diff);
}
